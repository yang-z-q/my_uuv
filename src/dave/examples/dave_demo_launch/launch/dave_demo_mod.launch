<?xml version="1.0"?>
<launch>
    <arg name="gui" default="true"/>
    <arg name="paused" default="false"/>
    <arg name="world_name" default="$(find dave_worlds)/worlds/dave_ocean_waves.world"/>
    <arg name="namespace" default="rexrov"/>
    <arg name="uuv_name" default="$(arg namespace)"/>
    <arg name="model_name" default="$(arg namespace)"/>
    <arg name="set_timeout" default="false"/>
    <arg name="timeout" default="0.0"/>

    <!-- use Gazebo's empty_world.launch with dave_ocean_waves.world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
        <arg name="verbose" value="false"/>
    </include>


    <!-- use ned frame north east down -->
    <include file="$(find uuv_assistants)/launch/publish_world_ned_frame.launch"/>

    <!-- world models -->
    <node name="publish_world_models"
        pkg="uuv_assistants"
        type="publish_world_models.py"
        output="screen">
        <rosparam subst_value="true">
            meshes:
                heightmap:
                    mesh: package://uuv_gazebo_worlds/models/sand_heightmap/meshes/heightmap.dae
                    model: sand_heightmap
                seafloor:
                    plane: [2000, 2000, 0.1]
                    pose:
                        position: [0, 0, -100]
                north:
                    plane: [0.1, 2000, 100]
                    pose:
                        position: [1000, 0, -50]
                south:
                    plane: [0.1, 2000, 100]
                    pose:
                        position: [-1000, 0, -50]
                west:
                    plane: [2000, 0.1, 100]
                    pose:
                        position: [0, -1000, -50]
                east:
                    plane: [2000, 0.1, 100]
                    pose:
                        position: [0, 1000, -50]
        </rosparam>
    </node>

    <!-- timeout -->
    <group if="$(arg set_timeout)">
        <include file="$(find uuv_assistants)/launch/set_simulation_timer.launch">
            <arg name="timeout" value="$(arg timeout)"/>
        </include>
    </group>

    <!-- rexrov robot -->
    <include file="$(find rexrov_description)/launch/upload_rexrov.launch">
        <arg name="namespace" value="rexrov"/>
        <arg name="x" value="4"/>
        <arg name="y" value="4"/>
        <arg name="z" value="-93"/>
        <arg name="yaw" value="-1.8"/>
    </include>

    <!-- image_view for sonar image -->
    <!-- <node name="image_view_sonar" pkg="image_view" type="image_view"
            args="image:=/rexrov/blueview_p900/sonar_image">
        <param name="window_name" value="blueview_p900" />
        <param name="autosize" value="true" />
        <param name="filename_format" value="/tmp/SonarImage_capture_%04i.jpg" />
    </node> -->

    <node pkg="tf" type="static_transform_publisher" name="multibeam_sonar_base_link" args="1.4 0 0.5 0 0.523 0 rexrov/base_link blueview_p900_link 50" />
    
    <!-- Start RViz  -->
    <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find uuv_gazebo)/rviz/controller_demo.rviz"/>

    <!-- 键盘控制 -->
    <include file="$(find uuv_teleop)/launch/uuv_keyboard.launch">
        <arg name="uuv_name" value="$(arg uuv_name)" />
    </include>

</launch>
