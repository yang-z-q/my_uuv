// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Double.proto

#include "Double.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace uuv_gazebo_plugins_msgs {
namespace msgs {
class DoubleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Double>
      _instance;
} _Double_default_instance_;
}  // namespace msgs
}  // namespace uuv_gazebo_plugins_msgs
namespace protobuf_Double_2eproto {
static void InitDefaultsDouble() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::uuv_gazebo_plugins_msgs::msgs::_Double_default_instance_;
    new (ptr) ::uuv_gazebo_plugins_msgs::msgs::Double();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::uuv_gazebo_plugins_msgs::msgs::Double::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Double =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDouble}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Double.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::uuv_gazebo_plugins_msgs::msgs::Double, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::uuv_gazebo_plugins_msgs::msgs::Double, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::uuv_gazebo_plugins_msgs::msgs::Double, value_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::uuv_gazebo_plugins_msgs::msgs::Double)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::uuv_gazebo_plugins_msgs::msgs::_Double_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Double.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014Double.proto\022\034uuv_gazebo_plugins_msgs."
      "msgs\"\032\n\006Double\022\020\n\005value\030\001 \002(\001:\0010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 72);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Double.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Double_2eproto
namespace uuv_gazebo_plugins_msgs {
namespace msgs {

// ===================================================================

void Double::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Double::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Double::Double()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Double_2eproto::scc_info_Double.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:uuv_gazebo_plugins_msgs.msgs.Double)
}
Double::Double(const Double& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:uuv_gazebo_plugins_msgs.msgs.Double)
}

void Double::SharedCtor() {
  value_ = 0;
}

Double::~Double() {
  // @@protoc_insertion_point(destructor:uuv_gazebo_plugins_msgs.msgs.Double)
  SharedDtor();
}

void Double::SharedDtor() {
}

void Double::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Double::descriptor() {
  ::protobuf_Double_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Double_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Double& Double::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Double_2eproto::scc_info_Double.base);
  return *internal_default_instance();
}


void Double::Clear() {
// @@protoc_insertion_point(message_clear_start:uuv_gazebo_plugins_msgs.msgs.Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Double::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:uuv_gazebo_plugins_msgs.msgs.Double)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double value = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:uuv_gazebo_plugins_msgs.msgs.Double)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:uuv_gazebo_plugins_msgs.msgs.Double)
  return false;
#undef DO_
}

void Double::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:uuv_gazebo_plugins_msgs.msgs.Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double value = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:uuv_gazebo_plugins_msgs.msgs.Double)
}

::google::protobuf::uint8* Double::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:uuv_gazebo_plugins_msgs.msgs.Double)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double value = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:uuv_gazebo_plugins_msgs.msgs.Double)
  return target;
}

size_t Double::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:uuv_gazebo_plugins_msgs.msgs.Double)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required double value = 1 [default = 0];
  if (has_value()) {
    total_size += 1 + 8;
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Double::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:uuv_gazebo_plugins_msgs.msgs.Double)
  GOOGLE_DCHECK_NE(&from, this);
  const Double* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Double>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:uuv_gazebo_plugins_msgs.msgs.Double)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:uuv_gazebo_plugins_msgs.msgs.Double)
    MergeFrom(*source);
  }
}

void Double::MergeFrom(const Double& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:uuv_gazebo_plugins_msgs.msgs.Double)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_value(from.value());
  }
}

void Double::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:uuv_gazebo_plugins_msgs.msgs.Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Double::CopyFrom(const Double& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:uuv_gazebo_plugins_msgs.msgs.Double)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Double::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Double::Swap(Double* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Double::InternalSwap(Double* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Double::GetMetadata() const {
  protobuf_Double_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Double_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace uuv_gazebo_plugins_msgs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::uuv_gazebo_plugins_msgs::msgs::Double* Arena::CreateMaybeMessage< ::uuv_gazebo_plugins_msgs::msgs::Double >(Arena* arena) {
  return Arena::CreateInternal< ::uuv_gazebo_plugins_msgs::msgs::Double >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
